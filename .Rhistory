data_final <- inner_join(data_final, finance, by = 'area_code')
data_final %>%
ggplot() +
geom_col(aes(x = reorder(area_name, pid), y = mean_hle)) +
geom_point(aes(x=area_name, y = mental_score)) +
coord_cartesian(ylim = c(40, NA)) +
ggtitle("          Health and mental health across Scottish Councils") +
labs(x="Area name by increasing % of population income deprived",
y = "Mean Healthy life expectancy in years (bars)
Mental Health Score  (dots)") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
data_final %>%
ggplot(aes(x = pid, y = finance)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle("Correlation of percentage population income deprived with ability
of population to manage their own money for Scottish Council areas") +
labs(x="% of population that are income deprived",
y = "Ability to manage their own money effectively (score)") +
coord_cartesian(ylim = c(0, NA))
dim(data_final)
head(data_final)
dim(data_final)
head(data_final)
dim(data_final)
library(stats)
head(data_final)
dim(data_final)
library(stats)
data_final %>%
q3_Model = lm(formula = mean_hle ~ pid + finance)
head(data_final)
dim(data_final)
library(stats)
q3_Model = lm(formula = mean_hle ~ pid + finance, data = data_final)
library(stats)
q3_Model = lm(formula = mean_hle ~ pid + finance, data = data_final)
# Get the model residuals
q3_Model_residuals = q3_Model$residuals
# Plot the result
hist(q3_Model_residuals)
library(stats)
q3_Model = lm(formula = mean_hle ~ pid + finance, data = data_final)
# Get the model residuals
q3_Model_residuals = q3_Model$residuals
# Plot the result
hist(q3_Model_residuals)
# Plot the residuals
qqnorm(q3_Model_residuals)
# Plot the Q-Q line
qqline(q3_Model_residuals)
# Install and load the ggcorrplot package
install.packages("ggcorrplot")
library(ggcorrplot)
# Remove the Customer Value column
collinearity_data <- subset(data_final, select = -mean_hle)
# Compute correlation at 2 decimal places
corr_matrix = round(cor(collinearity_data), 2)
# Install and load the ggcorrplot package
install.packages("ggcorrplot")
library(ggcorrplot)
# Remove the Customer Value column
collinearity_data <- subset(data_final, select = pid, finance)
install.packages("ggcorrplot")
# Install and load the ggcorrplot package
install.packages("ggcorrplot")
library(ggcorrplot)
# Remove the Customer Value column
collinearity_data <- select(data_final, pid, finance)
# Compute correlation at 2 decimal places
corr_matrix = round(cor(collinearity_data), 2)
install.packages("ggcorrplot")
collinearity_data <- select(data_final, pid, finance, -area_code)
data_final %>%
collinearity_data <- select(pid, finance)
View(collinearity_data)
data_final %>%
collinearity_data <- select(pid, finance) %>%
subset(select = -area_code)
# Install and load the ggcorrplot package
install.packages("ggcorrplot")
library(ggcorrplot)
# Remove the Customer Value column
data_final %>%
collinearity_data <- select(pid, finance) %>%
# Compute correlation at 2 decimal places
corr_matrix = round(cor(collinearity_data, c(pid, finance)), 2)
install.packages("ggcorrplot")
# Remove the Customer Value column
data_final %>%
collinearity_data <- select(pid, finance)
# Remove the Customer Value column
data_final %>%
collinearity_data <- select('pid', 'finance')
# Remove the Customer Value column
data_final %>%
collinearity_data <- select(pid)
data_final %>%
collinearity_data <- select(pid)
collinearity_data <- select(data_final, select=pid)
collinearity_data <- subset(churn_data, -area_code, -area_name, -mean_hle, -mental_score, -population)
collinearity_data <- subset(data_final, -area_code, -area_name, -mean_hle, -mental_score, -population)
collinearity_data <- subset(data_final, pid, finance)
collinearity_data <- select(data_final, pid, finance)
collinearity_data <- ungroup(data_final) %>%
select(data_final, pid, finance)
# Remove the Customer Value column
data_final %>%
collinearity_data <- ungroup() %>%
select(data_final, pid, finance)
collinearity_data <- select(data_final, pid, finance) %>%
ungroup()
collinearity_data <- select(data_final, pid, finance) %>%
ungroup() %>%
select(pid, finance)
# Remove the Customer Value column
collinearity_data <- select(data_final, pid, finance) %>%
ungroup() %>%
select(pid, finance)
# Compute correlation at 2 decimal places
corr_matrix = round(cor(collinearity_data, 2)
# Compute and show the result
ggcorrplot(corr_matrix, hc.order = TRUE, type = "lower",
corr_matrix = round(cor(collinearity_data, 2)
corr_matrix = round(cor(collinearity_data, 2)
# Remove the Customer Value column
collinearity_data <- select(data_final, pid, finance) %>%
ungroup() %>%
select(pid, finance)
# Compute correlation at 2 decimal places
ggcorrplot(collinearity_data, hc.order = TRUE, type = "lower",
lab = TRUE)
install.packages("car")
library(car)
q3_Model = lm(formula = mean_hle ~ pid + finance, data = data_final)
summary(q3_Model)
# Get the model residuals
q3_Model_residuals = q3_Model$residuals
# Plot the result
hist(q3_Model_residuals)
# Plot the residuals
qqnorm(q3_Model_residuals)
# Plot the Q-Q line
qqline(q3_Model_residuals)
q3_Model = lm(formula = mean_hle ~ pid + finance, data = data_final)
summary(q3_Model)
# Get the model residuals
q3_Model_residuals = q3_Model$residuals
# Plot the result
hist(q3_Model_residuals)
# Plot the residuals
qqnorm(q3_Model_residuals)
# Plot the Q-Q line
qqline(q3_Model_residuals)
# look at collinearity
vif(q3_Model)
vif(q3_Model)
```
q3_Model = lm(formula = mean_hle ~ pid + finance, data = data_final)
summary(q3_Model)
# Get the model residuals
q3_Model_residuals = q3_Model$residuals
# Plot the result
hist(q3_Model_residuals)
# Plot the residuals
qqnorm(q3_Model_residuals)
# Plot the Q-Q line
qqline(q3_Model_residuals)
# look at collinearity
vif(q3_Model)
vif(q3_Model)
q3_Model = lm(formula = mean_hle ~ pid + finance, data = data_final)
summary(q3_Model)
# Get the model residuals
q3_Model_residuals = q3_Model$residuals
# Plot the result
hist(q3_Model_residuals)
# Plot the residuals
qqnorm(q3_Model_residuals)
# Plot the Q-Q line
qqline(q3_Model_residuals)
# look at collinearity
vif_Values <- vif(q3_Model)
barplot(vif_values, main = "VIF Values", horiz = TRUE, col = "steelblue") #create horizontal bar chart to display each VIF value
vif_Values <- vif(q3_Model)
barplot(vif_values, main = "VIF Values", horiz = TRUE, col = "steelblue") #create horizontal bar chart to display each VIF value
vif_Values %>%
barplot(main = "VIF Values", horiz = TRUE, col = "steelblue") %>%  #create horizontal bar chart to display each VIF value
abline(v = 5, lwd = 3, lty = 2)
q3_Model = lm(formula = mean_hle ~ pid + finance, data = data_final)
summary(q3_Model)
# Get the model residuals
q3_Model_residuals = q3_Model$residuals
# Plot the result
hist(q3_Model_residuals)
# Plot the residuals
qqnorm(q3_Model_residuals)
# Plot the Q-Q line
qqline(q3_Model_residuals)
# look at collinearity
vif_Values <- vif(q3_Model)
vif_Values %>%
barplot(main = "VIF Values", horiz = TRUE, col = "steelblue") %>%  #create horizontal bar chart to display each VIF value
q3_Model = lm(formula = mean_hle ~ pid + finance, data = data_final)
summary(q3_Model)
# Get the model residuals
q3_Model_residuals = q3_Model$residuals
# Plot the result
hist(q3_Model_residuals)
# Plot the residuals
qqnorm(q3_Model_residuals)
# Plot the Q-Q line
qqline(q3_Model_residuals)
# look at collinearity
vif_Values <- vif(q3_Model)
vif_Values %>%
barplot(main = "VIF Values", horiz = TRUE, col = "steelblue") #create horizontal bar chart to display each VIF value
# Remove the Customer Value column
collinearity_data <- select(data_final, pid, finance) %>%
ungroup() %>%
select(pid, finance)
# Compute correlation at 2 decimal places
cor(collinearity_data)
cor(collinearity_data)
data_final %>%
ggplot(radial,aes(y=mean_hle,x=pid,color=finance)) +
geom_point()
data_final %>%
ggplot(aes(y=mean_hle,x=pid,color=finance)) +
geom_point()
+ stat_smooth(method="lm",se=FALSE)
data_final %>%
ggplot(aes(y=mean_hle,x=pid,z=finance)) +
geom_point() +
stat_smooth(method="lm",se=FALSE)
data_final %>%
ggplot(aes(y=mean_hle,x=pid,z=finance)) +
geom_point() +
stat_smooth(method="lm")
data_final %>%
ggplot(aes(y=mean_hle,x=pid,colour=finance)) +
geom_point() +
stat_smooth(method="lm")
data_final %>%
ggplot(aes(y=mean_hle,x=pid,colour=finance)) +
geom_point() +
stat_smooth(method="lm", se=FALSE)
data_final %>%
ggplot(aes(y=mean_hle,x=pid,colour=finance)) +
geom_point() +
stat_smooth(method="lm", se=FALSE) +
ggPredict(fit3,interactive=TRUE)
require(ggiraph)
require(ggiraphExtra)
require(plyr)
data_final %>%
ggplot(aes(y=mean_hle,x=pid,colour=finance)) +
geom_point() +
stat_smooth(method="lm", se=FALSE) +
ggPredict(fit3,interactive=TRUE)
data_final %>%
ggplot(aes(y=mean_hle,x=pid,colour=finance)) +
geom_point() +
stat_smooth(method="lm", se=FALSE) +
data_final %>%
ggplot(aes(y=mean_hle,x=pid,colour=finance)) +
geom_point() +
stat_smooth(method="lm", se=FALSE)
q3_Model_mental = lm(formula = mental_score ~ pid + finance, data = data_final)
summary(q3_Model)
# Get the model residuals
q3_Model_mental_residuals = q3_Model$residuals
# Plot the result
hist(q3_Model_mental_residuals)
# Plot the residuals
qqnorm(q3_Model_mental_residuals)
# Plot the Q-Q line
qqline(q3_Model_mental_residuals)
# look at collinearity
vif_Values2 <- vif(q3_Model_mental)
vif_Values2 %>%
barplot(main = "VIF Values", horiz = TRUE, col = "steelblue") #create horizontal bar chart to display each VIF value
data_final %>%
ggplot(aes(y=mental_score,x=pid,colour=finance)) +
geom_point() +
stat_smooth(method="lm", se=FALSE)
q3_Model_mental = lm(formula = mental_score ~ pid + finance, data = data_final)
summary(q3_Model)
# Get the model residuals
q3_Model_mental_residuals = q3_Model$residuals
# Plot the result
hist(q3_Model_mental_residuals)
# Plot the residuals
qqnorm(q3_Model_mental_residuals)
# Plot the Q-Q line
qqline(q3_Model_mental_residuals)
# look at collinearity
vif_Values2 <- vif(q3_Model_mental)
vif_Values2 %>%
barplot(main = "VIF Values", horiz = TRUE, col = "steelblue") #create horizontal bar chart to display each VIF value
View(q3_Model_mental)
View(q3_Model)
View(q3_Model_mental)
View(q3_Model)
View(q3_Model_mental)
View(q3_Model)
data_final %>%
ggplot(aes(x = pid, y = finance)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle("Correlation of percentage population income deprived with ability
of population to manage their own money for Scottish Council areas") +
labs(x="% of population that are income deprived",
y = "Ability to manage their own money effectively (score)") +
coord_cartesian(ylim = c(0, NA))
data_final %>%
ggplot(aes(x = mean_hle, y = mental_score)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle("Correlation of percentage population income deprived with ability
of population to manage their own money for Scottish Council areas") +
labs(x="% of population that are income deprived",
y = "Ability to manage their own money effectively (score)") +
coord_cartesian(ylim = c(0, NA))
data_final %>%
ggplot(aes(x = pid, y = finance)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle("Correlation of percentage population income deprived with ability
of population to manage their own money for Scottish Council areas") +
labs(x="% of population that are income deprived",
y = "Ability to manage their own money effectively (score)") +
coord_cartesian(ylim = c(0, NA))
data_final %>%
ggplot(aes(x = mean_hle, y = mental_score)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle("Correlation of percentage population income deprived with ability
of population to manage their own money for Scottish Council areas") +
labs(x="% of population that are income deprived",
y = "Ability to manage their own money effectively (score)") +
coord_cartesian(ylim = c(40, NA))
data_final %>%
ggplot(aes(x = pid, y = finance)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle("Correlation of percentage population income deprived with ability
of population to manage their own money for Scottish Council areas") +
labs(x="% of population that are income deprived",
y = "Ability to manage their own money effectively (score)") +
coord_cartesian(ylim = c(0, NA))
data_final %>%
ggplot(aes(x = mean_hle, y = mental_score)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle("Correlation of healthy life expectancy with mental health score") +
labs(x="Mean Healthy life expectancy",
y = "Mental Health Score") +
coord_cartesian(ylim = c(40, NA))
q3_Model_all = lm(formula = mean_hle ~ pid + finance + mental_score, data = data_final)
summary(q3_Model)
# Get the model residuals
q3_Model_all_residuals = q3_Model$residuals
# Plot the result
hist(q3_Model_all_residuals)
# Plot the residuals
qqnorm(q3_Model_all_residuals)
# Plot the Q-Q line
qqline(q3_Model_all_residuals)
# look at collinearity
vif_Values2 <- vif(q3_Model_all)
vif_Values2 %>%
barplot(main = "VIF Values", horiz = TRUE, col = "steelblue") #create horizontal bar chart to display each VIF value
q3_Model_all = lm(formula = mean_hle ~ pid + finance + mental_score, data = data_final)
summary(q3_Model_all)
# Get the model residuals
q3_Model_all_residuals = q3_Model$residuals
# Plot the result
hist(q3_Model_all_residuals)
# Plot the residuals
qqnorm(q3_Model_all_residuals)
# Plot the Q-Q line
qqline(q3_Model_all_residuals)
# look at collinearity
vif_Values2 <- vif(q3_Model_all)
vif_Values2 %>%
barplot(main = "VIF Values", horiz = TRUE, col = "steelblue") #create horizontal bar chart to display each VIF value
q3_Model_mental = lm(formula = mental_score ~ pid + finance, data = data_final)
summary(q3_Model_mental)
# Get the model residuals
q3_Model_mental_residuals = q3_Model$residuals
# Plot the result
hist(q3_Model_mental_residuals)
# Plot the residuals
qqnorm(q3_Model_mental_residuals)
# Plot the Q-Q line
qqline(q3_Model_mental_residuals)
# look at collinearity
vif_Values2 <- vif(q3_Model_mental)
vif_Values2 %>%
barplot(main = "VIF Values", horiz = TRUE, col = "steelblue") #create horizontal bar chart to display each VIF value
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readr)
library(tidyr)
library(dplyr)
library(ggplot2)
Data <- read_csv("ScotPHO_data.csv")
glimpse(Data)
hle <- Data %>%
filter(grepl('Healthy', indicator)) %>%
select(area_code,area_name,indicator,measure,upper_confidence_interval,lower_confidence_interval) %>%
rename(sex = indicator,
hle = measure) %>%
mutate(sex = gsub('Healthy life expectancy, females','0', sex,)) %>%
mutate(sex = gsub('Healthy life expectancy, males','1', sex,))
head(hle)
glimpse(hle)
mean_hle <- hle %>%
group_by(area_code) %>%
mutate(mean_hle = mean(hle))
select
mean_hle1 <- mean_hle %>%
filter(sex != 1) %>%
select(area_code, area_name, mean_hle)
head(mean_hle1)
pid <- Data  %>%
drop_na()
pid <- pid %>%
select(area_code,numerator,measure) %>%
rename(population = numerator,
pid = measure)
mental <- Data %>%
filter(grepl('Mental', indicator)) %>%
select(area_code,measure) %>%
rename(mental_score = measure)
finance <- Data %>%
filter(grepl('Households', indicator)) %>%
select(area_code,measure) %>%
rename(finance = measure)
data_final <- inner_join(mean_hle1, pid, by = 'area_code')
data_final <- inner_join(data_final, mental, by = 'area_code')
data_final <- inner_join(data_final, finance, by = 'area_code')
data_final %>%
ggplot() +
geom_col(aes(x = reorder(area_name, pid), y = mean_hle)) +
geom_point(aes(x=area_name, y = mental_score)) +
coord_cartesian(ylim = c(40, NA)) +
ggtitle("          Health and mental health across Scottish Councils") +
labs(x="Area name by increasing % of population income deprived",
y = "Mean Healthy life expectancy in years (bars)
Mental Health Score  (dots)") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
data_final %>%
ggplot(aes(x = pid, y = finance)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle("Correlation of percentage population income deprived with ability
of population to manage their own money for Scottish Council areas") +
labs(x="% of population that are income deprived",
y = "Ability to manage their own money effectively (score)") +
coord_cartesian(ylim = c(0, NA))
data_final %>%
ggplot(aes(x = mean_hle, y = mental_score)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle("Correlation of healthy life expectancy with mental health score") +
labs(x="Mean Healthy life expectancy",
y = "Mental Health Score") +
coord_cartesian(ylim = c(40, NA))
library(stats)
install.packages("ggcorrplot")
library(ggcorrplot)
install.packages("car")
library(car)
q3_Model = lm(formula = mean_hle ~ pid + finance, data = data_final)
summary(q3_Model)
# Get the model residuals
q3_Model_residuals = q3_Model$residuals
# Plot the result
hist(q3_Model_residuals)
# Plot the residuals
qqnorm(q3_Model_residuals)
# Plot the Q-Q line
qqline(q3_Model_residuals)
# look at collinearity
vif_Values <- vif(q3_Model)
vif_Values %>%
barplot(main = "VIF Values", horiz = TRUE, col = "steelblue") #create horizontal bar chart to display each VIF value
data_final %>%
ggplot(aes(y=mean_hle,x=pid,colour=finance)) +
geom_point() +
stat_smooth(method="lm", se=FALSE)
q3_Model_mental = lm(formula = mental_score ~ pid + finance, data = data_final)
summary(q3_Model_mental)
# Get the model residuals
q3_Model_mental_residuals = q3_Model$residuals
# Plot the result
hist(q3_Model_mental_residuals)
# Plot the residuals
qqnorm(q3_Model_mental_residuals)
# Plot the Q-Q line
qqline(q3_Model_mental_residuals)
# look at collinearity
vif_Values2 <- vif(q3_Model_mental)
vif_Values2 %>%
barplot(main = "VIF Values", horiz = TRUE, col = "steelblue") #create horizontal bar chart to display each VIF value
data_final %>%
ggplot(aes(y=mental_score,x=pid,colour=finance)) +
geom_point() +
stat_smooth(method="lm", se=FALSE)
tinytex::install_tinytex()
